<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'DoctrineNamespaceCacheKey%5B%5D' => 0,
'%5BApp%5CEntity%5CGame%24CLASSMETADATA%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CCategory%24CLASSMETADATA%5D%5B1%5D' => 2,
'%5BApp%5CEntity%5CQuestion%24CLASSMETADATA%5D%5B1%5D' => 3,
'%5BApp%5CEntity%5CQuizz%24CLASSMETADATA%5D%5B1%5D' => 4,
'%5BApp%5CEntity%5CUser%24CLASSMETADATA%5D%5B1%5D' => 5,
'%5BApp%5CEntity%5CResponse%24CLASSMETADATA%5D%5B1%5D' => 6,
'%5BApp%5CEntity%5CScore%24CLASSMETADATA%5D%5B1%5D' => 7,
'%5BApp%5CEntity%5CRole%24CLASSMETADATA%5D%5B1%5D' => 8,

], [

0 => 'N;',
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Game',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Game',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\GameRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'game',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Game',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'score' => [
                            'fieldName' => 'score',
                            'targetEntity' => 'App\\Entity\\Score',
                            'joinColumns' => [
                                [
                                    'name' => 'score_id',
                                    'referencedColumnName' => 'id',
                                    'unique' => true,
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Game',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'score_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'score_id' => 'score_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'score_id',
                            ],
                        ],
                        'quizzes' => [
                            'fieldName' => 'quizzes',
                            'joinTable' => [
                                'name' => 'game_quizzes',
                                'schema' => null,
                                'joinColumns' => [
                                    [
                                        'name' => 'game_id',
                                        'unique' => false,
                                        'nullable' => true,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'quizz_id',
                                        'unique' => true,
                                        'nullable' => true,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\Quizz',
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Game',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'game_id',
                                'quizz_id',
                            ],
                            'relationToSourceKeyColumns' => [
                                'game_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'quizz_id' => 'id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Category',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Category',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 55,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'category',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Question',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Question',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\QuestionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                        'difficulty' => [
                            'fieldName' => 'difficulty',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'difficulty',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'difficulty' => 'difficulty',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'label' => 'label',
                        'difficulty' => 'difficulty',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'question',
                    ],
                ],
                'associationMappings' => [
                    [
                        'category' => [
                            'fieldName' => 'category',
                            'joinColumns' => [
                                [
                                    'name' => 'category_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Category',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Question',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'category_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'category_id' => 'category_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'category_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'responses' => [
                            'fieldName' => 'responses',
                            'joinTable' => [
                                'name' => 'question_responses',
                                'schema' => null,
                                'joinColumns' => [
                                    [
                                        'name' => 'question_id',
                                        'unique' => false,
                                        'nullable' => true,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'response_id',
                                        'unique' => true,
                                        'nullable' => true,
                                        'onDelete' => null,
                                        'columnDefinition' => null,
                                        'referencedColumnName' => 'id',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\Response',
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Question',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'question_id',
                                'response_id',
                            ],
                            'relationToSourceKeyColumns' => [
                                'question_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'response_id' => 'id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Quizz',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Quizz',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\QuizzRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'isCorrect' => [
                            'fieldName' => 'isCorrect',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'is_correct',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'is_correct' => 'isCorrect',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'isCorrect' => 'is_correct',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'quizz',
                    ],
                ],
                'associationMappings' => [
                    [
                        'question' => [
                            'fieldName' => 'question',
                            'targetEntity' => 'App\\Entity\\Question',
                            'joinColumns' => [
                                [
                                    'name' => 'question_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Quizz',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'question_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'question_id' => 'question_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'question_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 60,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'email',
                        ],
                        'firstname' => [
                            'fieldName' => 'firstname',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'firstname',
                        ],
                        'lastname' => [
                            'fieldName' => 'lastname',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'lastname',
                        ],
                        'image' => [
                            'fieldName' => 'image',
                            'type' => 'text',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'image',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 3000,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'password',
                        ],
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 60,
                            'unique' => true,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'username',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'image' => 'image',
                        'password' => 'password',
                        'username' => 'username',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'firstname' => 'firstname',
                        'lastname' => 'lastname',
                        'image' => 'image',
                        'password' => 'password',
                        'username' => 'username',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'role' => [
                            'fieldName' => 'role',
                            'joinColumns' => [
                                [
                                    'name' => 'role_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Role',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'role_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'role_id' => 'role_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'role_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Response',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Response',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ResponseRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'isCorrect' => [
                            'fieldName' => 'isCorrect',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'is_correct',
                        ],
                        'label' => [
                            'fieldName' => 'label',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'label',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'is_correct' => 'isCorrect',
                        'label' => 'label',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'isCorrect' => 'is_correct',
                        'label' => 'label',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'response',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Score',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Score',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ScoreRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'score' => [
                            'fieldName' => 'score',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'score',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'score' => 'score',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'score' => 'score',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'score',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Role',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Role',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RoleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'roleName' => [
                            'fieldName' => 'roleName',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 55,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'role_name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'role_name' => 'roleName',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'roleName' => 'role_name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'role',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
